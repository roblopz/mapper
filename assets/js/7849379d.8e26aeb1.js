"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[3109],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return s}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),f=u(t),s=a,d=f["".concat(c,".").concat(s)]||f[s]||m[s]||o;return t?r.createElement(d,i(i({ref:n},l),{},{components:t})):r.createElement(d,i({ref:n},l))}));function s(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9151:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return f}});var r=t(3117),a=t(102),o=(t(7294),t(3905)),i=["components"],p={id:"map-defer",title:"MapDefer",sidebar_label:"MapDefer"},c=void 0,u={unversionedId:"mapping-configuration/map-defer",id:"mapping-configuration/map-defer",title:"MapDefer",description:"mapDefer() is a special type of MemberMapFunction that can be used to defer another MemberMapFunction based on some logic in forMember()",source:"@site/docs/mapping-configuration/map-defer.md",sourceDirName:"mapping-configuration",slug:"/mapping-configuration/map-defer",permalink:"/docs/mapping-configuration/map-defer",editUrl:"https://github.com/nartc/mapper/tree/main/docs-site/docs/mapping-configuration/map-defer.md",tags:[],version:"current",lastUpdatedBy:"Chau Tran",lastUpdatedAt:1612125319,formattedLastUpdatedAt:"1/31/2021",frontMatter:{id:"map-defer",title:"MapDefer",sidebar_label:"MapDefer"},sidebar:"docs",previous:{title:"MapWithArguments",permalink:"/docs/mapping-configuration/map-with-arguments"},next:{title:"For Self (Flattening)",permalink:"/docs/mapping-configuration/for-self"}},l=[],m={toc:l};function f(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"mapDefer()")," is a special type of ",(0,o.kt)("inlineCode",{parentName:"p"},"MemberMapFunction")," that can be used to ",(0,o.kt)("em",{parentName:"p"},"defer")," another ",(0,o.kt)("inlineCode",{parentName:"p"},"MemberMapFunction")," based on some logic in ",(0,o.kt)("inlineCode",{parentName:"p"},"forMember()")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"mapDefer()")," accepts a ",(0,o.kt)("inlineCode",{parentName:"p"},"deferFunction")," that will be invoked with the ",(0,o.kt)("strong",{parentName:"p"},"Source")," object."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { mapDefer, convertUsing, fromValue } from '@automapper/core';\n\nmapper.createMap(User, UserDto).forMember(\n  (destination) => destination.fullName,\n  mapDefer((source) => {\n    if (source.someFlag) return fromValue('raw');\n    return convertUsing(fullNameConverter);\n  })\n);\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"mapDefer()")," will set the ",(0,o.kt)("inlineCode",{parentName:"p"},"TransformationType")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"TransformationType.MapDefer")),(0,o.kt)("p",null,"If you have ",(0,o.kt)("inlineCode",{parentName:"p"},"strict")," mode turned on, you might need to annotate the generics of the ",(0,o.kt)("inlineCode",{parentName:"p"},"MemberMapFunction")," like ",(0,o.kt)("inlineCode",{parentName:"p"},"convertUsing<User, string>()")))}f.isMDXComponent=!0}}]);